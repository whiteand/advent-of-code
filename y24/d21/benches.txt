y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  275.9 µs      │ 352.8 µs      │ 285.8 µs      │ 292 µs        │ 100     │ 100
╰─ part2  1.231 ms      │ 1.55 ms       │ 1.289 ms      │ 1.3 ms        │ 100     │ 100

numeric by pos:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  271.2 µs      │ 351.8 µs      │ 274.8 µs      │ 279.3 µs      │ 100     │ 100
╰─ part2  1.273 ms      │ 1.615 ms      │ 1.285 ms      │ 1.298 ms      │ 100     │ 100

split inclusive:

Timer precision: 41 ns
y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  270 µs        │ 365.7 µs      │ 275.4 µs      │ 282.6 µs      │ 100     │ 100
╰─ part2  1.264 ms      │ 1.612 ms      │ 1.283 ms      │ 1.301 ms      │ 100     │ 100

Replacing key of the cache with usize

Timer precision: 41 ns
y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  142.2 µs      │ 200.7 µs      │ 149.1 µs      │ 151.9 µs      │ 100     │ 100
╰─ part2  709 µs        │ 982.9 µs      │ 732.7 µs      │ 740.8 µs      │ 100     │ 100


After binary robots tasks:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  145 µs        │ 247.5 µs      │ 150.7 µs      │ 154.2 µs      │ 100     │ 100
╰─ part2  718 µs        │ 952.6 µs      │ 736.4 µs      │ 748.8 µs      │ 100     │ 100

Total steps via raw:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  145.7 µs      │ 216.7 µs      │ 151.9 µs      │ 155 µs        │ 100     │ 100
╰─ part2  720.8 µs      │ 864.1 µs      │ 737 µs        │ 747 µs        │ 100     │ 100

inlined code_section:

Timer precision: 41 ns
y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  142.4 µs      │ 215.6 µs      │ 148.3 µs      │ 151.7 µs      │ 100     │ 100
╰─ part2  715.3 µs      │ 943.8 µs      │ 736.3 µs      │ 750.1 µs      │ 100     │ 100

Loop to iter:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  142.6 µs      │ 199.3 µs      │ 148.7 µs      │ 151.6 µs      │ 100     │ 100
╰─ part2  715.9 µs      │ 868.8 µs      │ 734.7 µs      │ 747.4 µs      │ 100     │ 100

Inlined control to controls


Timer precision: 41 ns
y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  72.16 µs      │ 105.2 µs      │ 75.31 µs      │ 76.46 µs      │ 100     │ 100
╰─ part2  467.7 µs      │ 605.9 µs      │ 487 µs        │ 490.6 µs      │ 100     │ 100

Vec on stack:

Timer precision: 41 ns
y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  69.37 µs      │ 103.9 µs      │ 72.29 µs      │ 73.96 µs      │ 100     │ 100
╰─ part2  410.7 µs      │ 555.7 µs      │ 420 µs        │ 428.6 µs      │ 100     │ 100

get_paths to Either

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  52.74 µs      │ 84.37 µs      │ 53.91 µs      │ 55.23 µs      │ 100     │ 100
╰─ part2  283.3 µs      │ 387.9 µs      │ 294.5 µs      │ 299.4 µs      │ 100     │ 100

get_paths to double Either 
Timer precision: 41 ns
y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  29.2 µs       │ 55.37 µs      │ 30.24 µs      │ 31.17 µs      │ 100     │ 100
╰─ part2  156.7 µs      │ 217.2 µs      │ 166.2 µs      │ 169.4 µs      │ 100     │ 100

Removed new_controls array:

Timer precision: 41 ns
    y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
    ├─ part1  25.7 µs       │ 125.2 µs      │ 27.27 µs      │ 29.79 µs      │ 100     │ 100
    ╰─ part2  134.9 µs      │ 215.8 µs      │ 146.4 µs      │ 148.9 µs      │ 100     │ 100

Replacing position calculation with array;

Timer precision: 41 ns
y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  26.95 µs      │ 60.12 µs      │ 28.29 µs      │ 28.93 µs      │ 100     │ 100
╰─ part2  137.7 µs      │ 240.9 µs      │ 147.2 µs      │ 149.9 µs      │ 100     │ 100

Removing get_paths:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  25.24 µs      │ 46.62 µs      │ 26.87 µs      │ 27.48 µs      │ 100     │ 100
╰─ part2  135.7 µs      │ 203.7 µs      │ 145.7 µs      │ 149.6 µs      │ 100     │ 100

After extracting calculate steps:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  24.24 µs      │ 41.95 µs      │ 25.83 µs      │ 26.3 µs       │ 100     │ 100
╰─ part2  137.3 µs      │ 256.3 µs      │ 141.8 µs      │ 144.7 µs      │ 100     │ 100

After removing division:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  25.04 µs      │ 41.24 µs      │ 26.58 µs      │ 26.84 µs      │ 100     │ 100
╰─ part2  127 µs        │ 196.3 µs      │ 134.5 µs      │ 136.9 µs      │ 100     │ 100

After simplifying get_path:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  23.87 µs      │ 53.58 µs      │ 25.08 µs      │ 25.8 µs       │ 100     │ 100
╰─ part2  129.7 µs      │ 234.7 µs      │ 138.4 µs      │ 141.8 µs      │ 100     │ 100

After removing cache iteration:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  23.91 µs      │ 44.16 µs      │ 25.43 µs      │ 26.03 µs      │ 100     │ 100
╰─ part2  110.2 µs      │ 136.3 µs      │ 118.2 µs      │ 118.6 µs      │ 100     │ 100

After removing allocation of vectors:

    y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
    ├─ part1  18.95 µs      │ 41.62 µs      │ 19.87 µs      │ 20.47 µs      │ 100     │ 100
    ╰─ part2  102.3 µs      │ 161.2 µs      │ 111.1 µs      │ 113.7 µs      │ 100     │ 100

After removing more allocations of vectors:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  12.95 µs      │ 26.41 µs      │ 14.37 µs      │ 14.51 µs      │ 100     │ 100
╰─ part2  95.49 µs      │ 191.8 µs      │ 104.3 µs      │ 106.4 µs      │ 100     │ 100

After using of fxhashmap:

y24d21    fastest       │ slowest       │ median        │ mean          │ samples │ iters
├─ part1  8.791 µs      │ 22.45 µs      │ 9.228 µs      │ 9.401 µs      │ 100     │ 100
╰─ part2  33.16 µs      │ 87.7 µs       │ 33.66 µs      │ 35.6 µs       │ 100     │ 100